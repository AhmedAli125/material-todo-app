{"version":3,"sources":["components/header/Header.js","context/todoContext/TodoContext.js","components/input/Input.js","components/todo/editiTodo/EditTodo.js","components/todo/todoList/todo/Todo.js","components/todo/todoList/TodoList.js","context/Type.js","context/todoContext/TodoReducer.js","config/Firebase.js","context/todoContext/TodoState.js","components/todo/TodoApplication.js","App.js","index.js"],"names":["Header","className","Typography","variant","align","TodoContext","createContext","Input","todoContext","React","useContext","useState","input","setInput","TextField","id","label","fullWidth","size","margin","value","required","onChange","e","target","Button","color","onClick","addTodo","alert","EditTodo","editTodo","cancelEdit","updateTodo","todo","editInput","setEditInput","style","width","Grid","container","alignItems","item","sm","md","lg","xs","xl","IconButton","aria-label","fontSize","task","createdOn","key","Todo","deleteTodo","setUpdateTodo","Paper","elevation","marginTop","marginLeft","padding","ButtonGroup","TodoList","getTodos","todos","useEffect","todoList","Object","keys","forEach","push","flag","setFlag","setTimeout","CircularProgress","thickness","map","GET_TODOS","EDIT_TODO","CANCEL_EDIT","state","action","type","payload","firebaseConfig","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","Firebase","firebase","initializeApp","TodoState","props","useReducer","TodoReducer","dispatch","Provider","database","ref","on","data","val","now","Date","current","getDate","toString","month","getMonth","year","getFullYear","getYear","currentDate","todoTask","set","then","console","log","catch","err","remove","children","TodoApplication","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.936504f5.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Typography} from '@material-ui/core'\r\nimport './header.css'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className='header'>\r\n            <Typography \r\n                variant='h4'\r\n                align='center'\r\n            >\r\n                Todo Application\r\n            </Typography>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import { createContext } from 'react'\r\n\r\nconst TodoContext = createContext();\r\n\r\nexport default TodoContext;","import React, {useState} from 'react'\r\nimport {TextField, Button} from '@material-ui/core'\r\nimport TodoContext from '../../context/todoContext/TodoContext'\r\n\r\nconst Input = () => {\r\n    const todoContext = React.useContext(TodoContext)\r\n\r\n    const [input, setInput] = useState('');\r\n    const changeInput = e => setInput(e.target.value);\r\n    let error = false;\r\n\r\n    const createTodo = () => {\r\n        if (input) {\r\n            todoContext.addTodo(input)\r\n            setInput('')\r\n        } else {\r\n            alert('Please Enter a Todo')\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <TextField \r\n                id=\"taskTitle\" \r\n                label=\"Enter Task Title\" \r\n                fullWidth={true}\r\n                size='medium'\r\n                margin='normal'\r\n                variant = 'outlined'\r\n                value={ input }\r\n                required\r\n                onChange={changeInput}\r\n            />\r\n            <Button\r\n                variant = 'contained'\r\n                size='large'\r\n                color='primary'\r\n                fullWidth={ true }\r\n                onClick={createTodo}\r\n            >\r\n                Add Task\r\n            </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input\r\n","import React from 'react'\r\nimport {\r\n    TextField,\r\n    IconButton,\r\n    Button, Grid\r\n} from '@material-ui/core'\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport TodoContext from '../../../context/todoContext/TodoContext'\r\n\r\n\r\nfunction EditTodo() {\r\n\r\n    const todoContext = React.useContext(TodoContext)\r\n\r\n    const {\r\n        editTodo,\r\n        cancelEdit,\r\n        updateTodo\r\n    } = todoContext;\r\n\r\n    const [editInput, setEditInput] = React.useState(editTodo.todo)\r\n    const handleChange = e => setEditInput(e.target.value)\r\n\r\n    const update = () => {\r\n        if (editInput) {\r\n            let task = {\r\n                todo: editInput,\r\n                createdOn: editTodo.createdOn,\r\n                key: editTodo.key\r\n            }\r\n            updateTodo(task)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div style={{width:'inherit'}}>\r\n            <Grid Grid container alignItems = 'center' style={{width:'450px'}}>\r\n                <Grid item sm={ 8 } md={ 8 } lg={ 8 } xs={ 8 } xl={ 8 }>\r\n                    <TextField \r\n                        id=\"taskTitle\" \r\n                        // label=\"Enter Task Title\" \r\n                        // fullWidth={true}\r\n                        size='medium'\r\n                        margin='normal'\r\n                        variant = 'outlined'\r\n                        value={ editInput }\r\n                        required\r\n                        onChange={handleChange}\r\n                    />\r\n                            <IconButton aria-label=\"\" size=\"small\">\r\n                                < CancelIcon fontSize = \"inherit\"\r\n                                onClick = {\r\n                                    cancelEdit\r\n                                }\r\n                                />\r\n                            </IconButton>\r\n                </Grid>\r\n                <Grid item>\r\n                    <Button\r\n                        onClick={update} \r\n                        variant='outlined' \r\n                        color='primary'\r\n                    >\r\n                        Update\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditTodo\r\n","import React from 'react'\r\nimport './todo.css'\r\nimport { Paper, Grid, Typography, Button, ButtonGroup} from '@material-ui/core'\r\nimport TodoContext from '../../../../context/todoContext/TodoContext'\r\nimport EditTodo from '../../editiTodo/EditTodo'\r\nconst Todo = ({ task }) => {\r\n\r\n    const todoContext = React.useContext(TodoContext)\r\n\r\n    const {\r\n        deleteTodo,\r\n        setUpdateTodo,\r\n        editTodo\r\n    } = todoContext;\r\n\r\n    const deleteSelectedTodo = () => {\r\n        deleteTodo(task.key)\r\n    }\r\n\r\n    const editSelectedTodo = () => {\r\n        setUpdateTodo(task.key)\r\n    }\r\n\r\n\r\n    return (\r\n        <Paper \r\n        elevation='2'\r\n        className='paper'\r\n        >\r\n            <Grid Grid container alignItems = 'center'>\r\n                {\r\n                    editTodo ?\r\n                    <Grid item sm={ 7 } md={ 7 } lg={ 7 } xs={ 7 } xl={ 7 }>\r\n                        <EditTodo />\r\n                    </Grid>\r\n                        :\r\n                    <Grid item sm={ 7 } md={ 7 } lg={ 7 } xs={ 7 } xl={ 7 }>\r\n                        <Typography alignItems='center' variant='h6' style={{\r\n                            marginTop: '10px',\r\n                            marginLeft: '5px',\r\n                            padding:'5px'\r\n                        }}>\r\n                            {task.todo}\r\n                        </Typography>\r\n                        <Typography variant='subtitle2' style={{marginLeft:'1rem'}}>\r\n                            Created On: {task.createdOn}\r\n                        </Typography>\r\n                    </Grid>\r\n                }\r\n                    <Grid item>\r\n                    { !editTodo ? <ButtonGroup>\r\n                        <Button\r\n                            onClick={editSelectedTodo} \r\n                            variant='outlined' \r\n                            color='primary'\r\n                        >\r\n                            Edit\r\n                        </Button>\r\n                        <Button\r\n                            onClick={deleteSelectedTodo} \r\n                            variant='outlined' \r\n                            color='secondary'\r\n                        >\r\n                            Delete\r\n                        </Button>\r\n                    </ButtonGroup> : null}\r\n                    </Grid>\r\n            </Grid>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default Todo\r\n","import React from 'react'\r\nimport Todo from './todo/Todo'\r\nimport TodoContext from '../../../context/todoContext/TodoContext'\r\nimport './todoList.css'\r\nimport { CircularProgress, Typography} from '@material-ui/core'\r\nimport EditTodo from '../editiTodo/EditTodo'\r\n\r\nfunction TodoList() {\r\n    const todoContext = React.useContext(TodoContext)\r\n\r\n    const {\r\n        getTodos,\r\n        todos\r\n    } = todoContext;\r\n\r\n    React.useEffect(() => {\r\n        getTodos()\r\n    }, [])\r\n\r\n    let todoList = [];\r\n\r\n    if (todos) {\r\n        Object.keys(todos).forEach(key => todoList.push(todos[key]))\r\n    }\r\n\r\n    const [flag, setFlag] = React.useState(true);\r\n\r\n    setTimeout(() => {\r\n        setFlag(false)\r\n    }, 5000)\r\n    \r\n    return (\r\n        <div className='container'>\r\n            { flag ? <CircularProgress\r\n                thickness='1'\r\n                size='10rem'\r\n                style={ {\r\n                    margin : '1rem 9rem'\r\n                }}\r\n            /> : null }\r\n\r\n            {\r\n                todoList.map(todo => <Todo task={ todo } key={ todo.key }/>)\r\n            }\r\n\r\n            {\r\n                !todos ? <Typography variant='h4' align='center'>\r\n                    No Todos Found!\r\n                </Typography> : null \r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList\r\n","export const GET_TODOS = 'GET_TODOS';\r\nexport const EDIT_TODO = 'EDIT_TODO';\r\nexport const CANCEL_EDIT = 'CANCEL_EDIT'","import {\r\n    GET_TODOS,\r\n    EDIT_TODO,\r\n    CANCEL_EDIT\r\n} from '../Type'\r\n\r\nexport default (state, action) => {\r\n    switch (action.type) {\r\n        case GET_TODOS:\r\n            return {\r\n                ...state,\r\n                todos: action.payload\r\n            }\r\n        case EDIT_TODO:\r\n            return {\r\n                ...state,\r\n                editTodo: action.payload\r\n            }\r\n        case CANCEL_EDIT:\r\n            return {\r\n                ...state,\r\n                editTodo: null\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import firebase from 'firebase'\r\n\r\n const firebaseConfig = {\r\n    //  apiKey: \"AIzaSyAbb_29w_pVQzQeHS-ETLTp3hh-I8UMsV8\",\r\n     apiKey: `${process.env.REACT_APP_API_KEY}`,\r\n     authDomain: \"database-6bf7c.firebaseapp.com\",\r\n     projectId: \"database-6bf7c\",\r\n     storageBucket: \"database-6bf7c.appspot.com\",\r\n     messagingSenderId: \"230701155217\",\r\n     appId: \"1:230701155217:web:5d9cb836096031788e1030\"\r\n };\r\n // Initialize Firebase\r\nconst Firebase = firebase.initializeApp(firebaseConfig);\r\n \r\nexport default Firebase;","import { useReducer } from 'react'\r\nimport TodoContext from './TodoContext'\r\nimport TodoReducer from './TodoReducer'\r\nimport Firebase from '../../config/Firebase'\r\nimport {\r\n    GET_TODOS,\r\n    EDIT_TODO,\r\n    CANCEL_EDIT\r\n} from '../Type'\r\n\r\nconst TodoState = props => {\r\n    const initialState = {\r\n        todos: null,\r\n        // editTodo: false,\r\n        editTodo: null\r\n    }\r\n\r\n    const [state, dispatch] = useReducer(TodoReducer, initialState)\r\n\r\n    const getTodos = () => {\r\n        Firebase.database().ref('/todo-application/todos').on('value', data => {\r\n                dispatch({type: GET_TODOS, payload: data.val()})\r\n        })\r\n        // catch (err=> console.log(err))\r\n    }\r\n\r\n     const currentDate = () => {\r\n\r\n         let now = new Date();\r\n\r\n         let getMonth = () => {\r\n             let month = now.getMonth() + 1;\r\n             if (month < 10) {\r\n                 return \"0\" + month.toString();\r\n             } else return month.toString();\r\n         };\r\n\r\n         let getDate = () => {\r\n             let current = (now.getDate());\r\n             if (current < 10) {\r\n                 return \"0\" + current.toString();\r\n                 // return current.toString();\r\n             } else return current.toString();\r\n         };\r\n\r\n         let getYear = () => {\r\n             let year = (now.getFullYear()).toString();\r\n             if (year < 10) {\r\n                 return \"0\" + year.toString();\r\n             } else return year.toString();\r\n         };\r\n\r\n        //  return getYear() + \"-\" + getMonth() + \"-\" + getDate();\r\n         return getDate() + \"-\" + getMonth() + \"-\" + getYear();\r\n     };\r\n\r\n    const addTodo = (todo) => {\r\n        const createdOn = currentDate();\r\n        const key = Firebase.database().ref('/todo-application/todos/').push().key\r\n\r\n        let todoTask = {\r\n            key,\r\n            createdOn,\r\n            todo\r\n        }\r\n\r\n        Firebase.database().ref(`/todo-application/todos/${key}`).set(todoTask)\r\n            .then(()=>console.log('todo added successfully'))\r\n            .catch(err=>console.log(err))\r\n    }\r\n\r\n    const deleteTodo = (key) => {\r\n        Firebase.database().ref(`/todo-application/todos/${key}`).remove()\r\n            .then(()=>console.log('removed successfully'))\r\n            .catch(err=>console.log(err))\r\n    }\r\n\r\n    const setUpdateTodo = (key) => {\r\n        dispatch({ type: EDIT_TODO, payload: state.todos[key] })\r\n    }\r\n\r\n    const updateTodo = (task) => {\r\n        console.log(task)\r\n\r\n        Firebase.database().ref(`/todo-application/todos/${task.key}`).set(task)\r\n            .then(() => {\r\n                console.log('updated')\r\n                dispatch({type: CANCEL_EDIT})\r\n            })\r\n            .catch((err)=>console.log(err))\r\n    }\r\n    \r\n    const cancelEdit = () => {\r\n        dispatch({type: CANCEL_EDIT})\r\n    }\r\n\r\n    return (\r\n        <TodoContext.Provider\r\n            value={{\r\n                todos: state.todos,\r\n                editTodo: state.editTodo,\r\n                getTodos,\r\n                addTodo,\r\n                deleteTodo,\r\n                updateTodo,\r\n                setUpdateTodo,\r\n                cancelEdit\r\n            }}\r\n        >\r\n            {props.children}\r\n        </TodoContext.Provider>\r\n    )\r\n}\r\n\r\nexport default TodoState;","import React from 'react'\r\nimport Header from '../header/Header'\r\nimport Input from '../input/Input'\r\nimport TodoList from './todoList/TodoList'\r\nimport TodoState from '../../context/todoContext/TodoState'\r\n\r\nconst TodoApplication = () => {\r\n    return (\r\n        <div>\r\n            <TodoState>\r\n                <Header />\r\n                <Input />\r\n                <TodoList />\r\n            </TodoState>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoApplication\r\n","import TodoApplication from './components/todo/TodoApplication'\nimport './App.css'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TodoApplication />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}